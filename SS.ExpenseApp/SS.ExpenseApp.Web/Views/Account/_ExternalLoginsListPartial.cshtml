@model SS.ExpenseApp.Web.Models.ExternalLoginListViewModel
@using Microsoft.Owin.Security

<h4>Use following to log in.</h4>
<hr />
<h5>Employees - 4</h5>
<ul>
    <li>employee1@gmail.com</li>
    <li>employee2@gmail.com</li>
    <li>employee3@gmail.com</li>
    <li>employee4@gmail.com</li>
</ul>
<h5>Managers - 2</h5>
<ul>
    <li>manager1@gmail.com</li>
    <li>manager2@gmail.com</li>
</ul>
<h5>Finance employees - 2</h5>
<ul>
    <li>finance1@gmail.com</li>
    <li>finance2@gmail.com</li>
</ul>
@{
    var loginProviders = Context.GetOwinContext().Authentication.GetExternalAuthenticationTypes();
    if (loginProviders.Count() == 0)
    {
        <div>
            <p>
                To login use the password <i>Password_1</i>
            </p>
            <p>
                <span class="warning">This aplication is using Code-first approach to created the database. So, the very first login always fails.</span>
            </p>
        </div>
    }
    else
    {
        using (Html.BeginForm("ExternalLogin", "Account", new { ReturnUrl = Model.ReturnUrl }))
        {
            @Html.AntiForgeryToken()
            <div id="socialLoginList">
                <p>
                    @foreach (AuthenticationDescription p in loginProviders)
                    {
                        <button type="submit" class="btn btn-default" id="@p.AuthenticationType" name="provider" value="@p.AuthenticationType" title="Log in using your @p.Caption account">@p.AuthenticationType</button>
                    }
                </p>
            </div>
        }
    }
}
